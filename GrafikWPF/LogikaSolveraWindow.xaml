<Window x:Class="GrafikWPF.LogikaSolveraWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Logika i Strategia Działania"
        Width="650"
        SizeToContent="Height"
        WindowStartupLocation="CenterOwner"
        WindowStyle="ToolWindow"
        ResizeMode="NoResize"
        Background="LightGray">

    <Grid Margin="15">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
            <TextBlock TextWrapping="Wrap" LineHeight="20" TextAlignment="Justify">
                <TextBlock FontWeight="Bold" FontSize="16">Jak działa program?</TextBlock>
                <LineBreak/><LineBreak/>
                <Run>
                    Problem optymalnego ułożenia grafiku dyżurów jest wysoce złożonym zagadnieniem. Ilość możliwych kombinacji rośnie astronomicznie z każdym kolejnym lekarzem i dniem, uniemożliwiając ich pełne sprawdzenie. Program podchodzi do tego problemu w sposób strategiczny.
                </Run>                
                <LineBreak/><LineBreak/>
                
                <TextBlock FontWeight="Bold" FontSize="14">1. Cel: Czym jest "optymalny" grafik?</TextBlock>
                <LineBreak/>
                <Run>
                    To Ty decydujesz, co jest najważniejsze. W oknie "Kolejność priorytetów" układasz cele (np. ciągłość obsady, sprawiedliwość obciążenia) od najważniejszego do najmniej istotnego. Algorytm zawsze będzie dążył do maksymalizacji celu o wyższym priorytecie, traktując kolejne jako kryteria rozstrzygające w przypadku remisu.
                </Run>
                <LineBreak/><LineBreak/>

                <TextBlock FontWeight="Bold" FontSize="14">2. Narzędzia: Jak szukamy rozwiązania?</TextBlock>
                <LineBreak/>
                <Run>
                    Program posiada zestaw wyspecjalizowanych "silników" (algorytmów), z których każdy ma inną strategię działania. Wyboru dokonujesz w oknie "Wybór algorytmu". Można je porównać do różnych metod dotarcia na szczyt góry:
                </Run>
                <LineBreak/>
                <BulletDecorator Margin="20,5,0,0">
                    <BulletDecorator.Bullet>
                        <TextBlock Text="•" Margin="0,0,10,0"/>
                    </BulletDecorator.Bullet>
                    <TextBlock TextWrapping="Wrap"><Run FontWeight="Bold">Silniki Gwarantujące Optimum</Run> (np. Backtracking, AStar): Działają jak detektyw z kompletną mapą – metodycznie sprawdzają wszystkie obiecujące ścieżki. Dają gwarancję znalezienia absolutnie najlepszego możliwego wyniku, ale dla złożonych problemów ich praca może trwać bardzo długo.</TextBlock>
                </BulletDecorator>
                <BulletDecorator Margin="20,5,0,0">
                    <BulletDecorator.Bullet>
                        <TextBlock Text="•" Margin="0,0,10,0"/>
                    </BulletDecorator.Bullet>
                    <TextBlock TextWrapping="Wrap"><Run FontWeight="Bold">Silniki Metaheurystyczne</Run> (np. Genetic, AntColony): Działają jak doświadczony strateg – nie analizują każdej możliwości, ale używają inteligentnych technik, by bardzo szybko znaleźć rozwiązanie bliskie ideału. Są idealne dla skomplikowanych grafików pod presją czasu.</TextBlock>
                </BulletDecorator>
                <LineBreak/><LineBreak/>

                <TextBlock FontWeight="Bold" FontSize="14">3. Fundament: Nienaruszalne reguły</TextBlock>
                <LineBreak/>
                <Run>
                    Niezależnie od wybranych priorytetów i silnika, program zawsze i bezwzględnie przestrzega następujących "twardych" zasad:
                </Run>
                <LineBreak/>
                <BulletDecorator Margin="20,5,0,0">
                    <BulletDecorator.Bullet>
                        <TextBlock Text="•" Margin="0,0,10,0"/>
                    </BulletDecorator.Bullet>
                    <TextBlock TextWrapping="Wrap"><Run FontWeight="Bold">Rezerwacje</Run> są przydzielane w pierwszej kolejności, zanim algorytm zacznie wypełniać resztę grafiku.</TextBlock>
                </BulletDecorator>
                <BulletDecorator Margin="20,5,0,0">
                    <BulletDecorator.Bullet>
                        <TextBlock Text="•" Margin="0,0,10,0"/>
                    </BulletDecorator.Bullet>
                    <TextBlock TextWrapping="Wrap">Lekarz nie może przekroczyć swojego <Run FontWeight="Bold">limitu dyżurów</Run>.</TextBlock>
                </BulletDecorator>
                <BulletDecorator Margin="20,5,0,0">
                    <BulletDecorator.Bullet>
                        <TextBlock Text="•" Margin="0,0,10,0"/>
                    </BulletDecorator.Bullet>
                    <TextBlock TextWrapping="Wrap">Wymagany jest <Run FontWeight="Bold">odpoczynek</Run> (dyżur dzień po dniu jest zabroniony), chyba że na drugi dzień przypada deklaracja <Run FontWeight="Bold">"Bardzo chcę"</Run>.</TextBlock>
                </BulletDecorator>
                <BulletDecorator Margin="20,5,0,0">
                    <BulletDecorator.Bullet>
                        <TextBlock Text="•" Margin="0,0,10,0"/>
                    </BulletDecorator.Bullet>
                    <TextBlock TextWrapping="Wrap">Dyżur nie może sąsiadować z <Run FontWeight="Bold">"Innym dyżurem"</Run> (chyba że występuje "Bardzo chcę").</TextBlock>
                </BulletDecorator>
                <BulletDecorator Margin="20,5,0,0">
                    <BulletDecorator.Bullet>
                        <TextBlock Text="•" Margin="0,0,10,0"/>
                    </BulletDecorator.Bullet>
                    <TextBlock TextWrapping="Wrap">Lekarz może wziąć tylko jeden dyżur z deklaracją <Run FontWeight="Bold">"Mogę warunkowo"</Run>.</TextBlock>
                </BulletDecorator>
            </TextBlock>
        </ScrollViewer>

        <Button Grid.Row="1" Content="Zamknij" IsDefault="True" Click="Zamknij_Click" HorizontalAlignment="Right" Margin="0,15,0,0" Padding="10,5"/>
    </Grid>
</Window>